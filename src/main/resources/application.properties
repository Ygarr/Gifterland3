# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
#spring.datasource.url = jdbc:mysql://localhost:3306/netgloo_blog?useSSL=false
#Does This need?
spring.datasource.dataSourceClassName=org.h2.jdbcx.JdbcDataSource

spring.datasource.driverClassName=org.h2.Driver
spring.datasource.url = jdbc:h2:~/theDb;IFEXISTS=TRUE
#HMMMMMMM!!!!!!!!!!!!!!!!!!!!!!!!1
#Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
#2016-08-20 04:06:02.108  INFO 5274 --- [      Thread-12] o.s.j.d.e.EmbeddedDatabaseFactory        : Shutting down embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
#The answer in POM.xml
#!!!!!!!!!!!!!!!!!!!!!!!!!111one


# Username and password
#spring.datasource.username = root
spring.datasource.username = sa
#spring.datasource.password = root
#spring.datasource.password = ""

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
#spring.jpa.hibernate.ddl-auto = update
#2016-08-01 12:10:51.559  WARN 28315 --- [           main] org.hibernate.cfg.SettingsFactory
#: Unrecognized value for "hibernate.hbm2ddl.auto": create-update
#spring.jpa.hibernate.ddl-auto = create-update
# Hibernate ddl auto (
# create,
# create-drop,
# update)
#the database schema will be automatically created (and updated),
#creating tables and columns, accordingly to java entities found in the project.

# So hibernate creates but where? Why not creates entity-tables while update???
#Was create
spring.jpa.hibernate.ddl-auto = create

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect
#Does this need?:
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.database=H2

spring.datasource.initialize=true
spring.datasource.platform=h2
#spring.datasource.schema=h2db_initDB.sql
#spring.jpa.properties.hibernate.hbm2ddl.import_files=
spring.datasource.data=classpath:/sql/h2db/data-h2.sql

spring.h2.console.enabled = true
spring.h2.console.path=/h2dbconsole


#########################################################
#Enable Facebook
##########################################################

spring.social.facebook.appId=1778357655710541
spring.social.facebook.appSecret=8d71da6018fade802f0894d63e7821ba

#APPLICATION DETAILS
#=========================
#ID:             1778357655710541
#Name:           Gifterland3
#Namespace:      null
#Contact Email:  kildey@ukr.net
#Website URL:    http://localhost:8080/

###jdbc.driverClassName=org.h2.Driver
###jdbc.url=jdbc:h2:~/theDb
###jdbc.username=sa
###jdbc.password=

